@mixin breakpoint($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin distribute-on-circle(
  $nb-items,
  $circle-size,
  $item-size,
  $class-for-IE: false
) {
  $half-item: ($item-size / 2);
  $half-parent: ($circle-size / 2);

  position: relative; /* 1 */
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none; /* 2 */
  box-sizing: content-box; /* 3 */

  > * { /* 4 */
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    margin: -$half-item;

  }

  $angle: (360 / $nb-items);
  $rot: 0;

  @for $i from 1 through $nb-items {
    > :nth-of-type(#{$i}) {
      transform: rotate($rot * 1deg)
      translate($half-parent)
      rotate($rot * -1deg)

    }
    @if $i == 3 {
      > :nth-of-type(#{$i}) {
        // display: none;
        transform:
        rotate($rot * 1deg)
        translate($half-parent)
        rotate($rot * -1deg)
        translate(-$half-parent + 50);
      }
    }
    @if $i == 4 {
      > :nth-of-type(#{$i}) {
        transform:
        rotate($rot * 1deg)
        translate($half-parent)
        rotate($rot * -1deg)
        translate(-$half-parent + 50);
      }
    }
    @if $i == 5 {
      > :nth-of-type(#{$i}) {
        transform:
        rotate($rot * 1deg)
        translate($half-parent)
        rotate($rot * -1deg)
        translate(-$half-parent + 50);
      }
    }


    $rot: ($rot + $angle);
  }
}

@mixin distribute-on-circle-about(
  $nb-items,
  $circle-size,
  $item-size,
  $class-for-IE: false
) {
  $half-item: ($item-size / 2);
  $half-parent: ($circle-size / 2);

  position: relative; /* 1 */
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none; /* 2 */
  box-sizing: content-box; /* 3 */

  > * { /* 4 */
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    margin: -$half-item;

  }

  $angle: (220 / $nb-items);
  $rot: 0;

  @for $i from 1 through $nb-items {
    > :nth-of-type(#{$i}) {
      transform: rotate($rot * 1deg)
      translate($half-parent)
      rotate($rot * -1deg)
    }

    @if $i == 3 {
      > :nth-of-type(#{$i}) {
        transform:
        rotate($rot * 1deg)
        translate($half-parent)
        rotate($rot * -1deg)
        translate(-$half-parent / 5);
      }
    }
    @if $i == 4 {
      > :nth-of-type(#{$i}) {
        transform:
        rotate($rot * 1deg)
        translate($half-parent)
        rotate($rot * -1deg)
        translate(-$half-parent / 3);
      }
    }
    @if $i == 5 {
      > :nth-of-type(#{$i}) {
        transform:
        rotate($rot * 1deg)
        translate($half-parent)
        rotate($rot * -1deg)
        translate(-$half-parent / 3);
      }
    }


    $rot: ($rot + $angle);
  }
}

// transform:
// rotate($rot * 1deg)
// translate($half-parent)
// rotate($rot * -1deg)
// translate(-$half-parent + 50);


@mixin big-circle-f($p-height, $bdc) {
  width: $p-height;
  height: $p-height;
  margin-top: -($p-height / 2);
  margin-left: -($p-height / 2);
  border: 1px solid $bdc;
  border-radius: 50%;
  z-index: -1;
}

@mixin midl-circle-f($p-height, $bdc) {
  width: $p-height;
  height: $p-height;
  margin-top: -($p-height / 2);
  margin-left: -($p-height / 2);

  border-right: 1px solid $bdc;
  border-left: 1px solid $bdc;
  border-bottom: 1px solid  $bdc;
  border-radius: 50%;
  z-index: -1;

  border-top: 1px solid transparent;
}

@mixin xs-circle-half($p-height, $bdc) {
  width: $p-height;
  height: $p-height;
  margin-top: -($p-height / 2);
  margin-left: -($p-height / 2);

  border-right: 1px solid $bdc;
  border-left: 1px solid $bdc;
  border-top: 1px solid  $bdc;
  border-radius: 50%;

  border-bottom: 1px solid transparent;
}

@mixin xxs-circle-half($p-height, $bdc) {
  width: $p-height;
  height: $p-height;
  margin-top: -($p-height / 2);
  margin-left: -($p-height / 2);

  border-bottom: 1px solid $bdc;
  border-top: 1px solid transparent;
  border-radius: 50%;

  border-left: 1px solid  transparent;
  border-right: 1px solid transparent;
}
